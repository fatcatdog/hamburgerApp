package com.jacob.dao;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.jacob.model.Picture;
import com.jacob.model.User;

@Transactional
@Repository
public class PictureDao {
	
    private final JdbcTemplate jdbcTemplate;

    @Autowired
    public PictureDao(JdbcTemplate jdbcTemplate) {
	  this.jdbcTemplate = jdbcTemplate;
    }
    
//	 public User findUserById(int id) {
//			String sql = "SELECT id, email, firstname, lastname, password, active FROM user WHERE id = ?";
//	    	 RowMapper<User> rowMapper = new BeanPropertyRowMapper<User>(User.class);
//			 User user = jdbcTemplate.queryForObject(sql, rowMapper, id);
//			return user; 
//	 }
    
    public Picture findPictureById(int id) {
		String sql = "SELECT id, user_id, pic_url FROM picture WHERE id = ?";
   	 RowMapper<Picture> rowMapper = new BeanPropertyRowMapper<User>(Picture.class);
//		 User user = jdbcTemplate.queryForObject(sql, rowMapper, id);
//		return user; 
    }

}
