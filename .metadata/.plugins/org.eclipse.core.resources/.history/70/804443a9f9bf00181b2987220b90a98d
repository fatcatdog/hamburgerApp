package com.jacob.dao;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

@Transactional
@Repository
public class UserDao {

    private final JdbcTemplate jdbcTemplate;
    
    @Autowired
    private BCryptPasswordEncoder bCryptPasswordEncoder;

    @Autowired
    public UserDao(JdbcTemplate jdbcTemplate) {
	  this.jdbcTemplate = jdbcTemplate;
    }
    
	 public User findUserByEmail(String email) {
			String sql = "SELECT id, email, firstname, lastname, password, active FROM bloguser WHERE email = ?";
	    	 RowMapper<User> rowMapper = new BeanPropertyRowMapper<User>(User.class);
			 User user = jdbcTemplate.queryForObject(sql, rowMapper, email);
			return user; 
	 }
	 
	 public boolean checkIfEmailIsInDb(String email) {
		 	boolean result = false; 
			String sql = "SELECT count(*) FROM bloguser WHERE email = ?";
			int count = jdbcTemplate.queryForObject(sql, new Object[] { email }, Integer.class);
		    if (count > 0) {
		      result = true;
		    }  
		 return result; 
	 }

	 
    
}
