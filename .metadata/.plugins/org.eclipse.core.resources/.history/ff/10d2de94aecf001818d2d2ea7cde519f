package com.jacob.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Service;

import com.jacob.dao.UserDao;
import com.jacob.model.User;

@Service("userService")
public class UserService implements UserServiceInterface {

	@Autowired
	private UserDao userDao;

	@Override
	public User findUserByEmail(String email) {
		return userDao.findUserByEmail(email.toLowerCase());
	}

	@Override
	public User findUserById(int id) {
		return userDao.findUserById(id);
	}

	@Override
	public void saveUser(User user) {
		userDao.saveUser(user);
	}

	@Override
	 public boolean checkIfEmailIsInDb(String email) {
		return userDao.checkIfEmailIsInDb(email.toLowerCase());
	}
	
	 private User getCurrentAuthUser() {
		  //this variable will be used to get current user Authentication(where we can get there user id from) from spring security
		 Authentication auth = SecurityContextHolder.getContext().getAuthentication();

		 //getting user object from spring security Authentication object
		  User tempUser = findUserByEmail(auth.getName());
		 return tempUser;
	 }
	 

}
